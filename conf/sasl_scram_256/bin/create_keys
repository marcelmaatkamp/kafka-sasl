#!/bin/bash
# https://github.com/Mongey/terraform-provider-kafka/blob/master/secrets/create-certs.sh

set \
 -o nounset \
 -o errexit \
 -o verbose \
 -o xtrace

PASS=confluent
WORKDIR=conf/keys

CA=ca
CLIENT=client
BROKER=kafka

mkdir -p ${WORKDIR}/ca
mkdir -p ${WORKDIR}/kafka
mkdir -p ${WORKDIR}/client

# Generate CA key
# ---------------

openssl req \
  -new \
  -x509 \
  -keyout ${WORKDIR}/ca/${CA}.key \
  -out ${WORKDIR}/ca/${CA}.crt \
  -days 365 \
  -subj '/CN=ca1.test.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US' \
  -passin pass:${PASS} \
  -passout pass:${PASS}

# client keys
# -----------

# Private KEY
openssl genrsa \
  -des3 \
  -passout "pass:${PASS}" \
  -out ${WORKDIR}/client/${CLIENT}.key \
  1024

# Signing Request
openssl req \
  -passin "pass:${PASS}" \
  -passout "pass:${PASS}" \
  -key ${WORKDIR}/client/${CLIENT}.key \
  -new \
  -out ${WORKDIR}/client/${CLIENT}.req \
  -subj '/CN=kafkacat.test.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US'

# Signed Key
openssl x509 -req \
  -CA ${WORKDIR}/ca/${CA}.crt \
  -CAkey ${WORKDIR}/ca/${CA}.key \
  -in ${WORKDIR}/client/${CLIENT}.req \
  -out ${WORKDIR}/client/${CLIENT}.pem \
  -days 9999 \
  -CAcreateserial \
  -passin "pass:${PASS}"

## generate for golang
echo "generating a private key without passphrase"
openssl rsa \
  -in ${WORKDIR}/client/${CLIENT}.key \
  -passin "pass:${PASS}" \
  -out ${WORKDIR}/client/${CLIENT}.key.pem

# kafka keys 
# ----------

for BROKER in kafka
do
  echo ${BROKER}

  # Create keystores
  keytool -genkey -noprompt \
    -alias ${BROKER} \
    -dname "CN=localhost, OU=TEST, O=CONFLUENT, L=PaloAlto, S=Ca, C=US" \
    -keystore ${WORKDIR}/kafka/${BROKER}.jks \
    -keyalg RSA \
    -ext SAN=dns:${BROKER} \
    -storepass ${PASS} \
    -keypass ${PASS}

  # Create CSR, sign the key and import back into keystore
  keytool  \
    -keystore ${WORKDIR}/kafka/${BROKER}.jks \
    -alias ${BROKER} \
    -certreq \
    -file ${WORKDIR}/kafka/${BROKER}.csr \
    -storepass ${PASS} \
    -keypass ${PASS}

  openssl x509 \
    -req \
    -CA ${WORKDIR}/ca/${CA}.crt  \
    -CAkey ${WORKDIR}/ca/${CA}.key \
    -in ${WORKDIR}/kafka/${BROKER}.csr \
    -out ${WORKDIR}/kafka/${BROKER}.crt \
    -days 9999 \
    -CAcreateserial \
    -passin pass:${PASS}

  # add CA in keystool
  keytool \
    -keystore ${WORKDIR}/kafka/${BROKER}.jks \
    -alias CARoot \
    -import \
    -file ${WORKDIR}/ca/${CA}.crt \
    -storepass ${PASS} \
    -keypass ${PASS}

  # add broker in keystool
  keytool -keystore ${WORKDIR}/kafka/${BROKER}.jks \
    -alias ${BROKER} \
    -import \
    -file ${WORKDIR}/kafka/${BROKER}.crt \
    -storepass ${PASS} \
    -keypass ${PASS}

  # Create truststore and import the CA cert.
  keytool -keystore ${WORKDIR}/kafka/${BROKER}.truststore.jks \
    -alias CARoot \
    -import \
    -file ${WORKDIR}/ca/${CA}.crt \
    -storepass ${PASS} \
    -keypass ${PASS}

  echo ${PASS} > ${WORKDIR}/kafka/${BROKER}_sslkey_creds
  echo ${PASS} > ${WORKDIR}/kafka/${BROKER}_keystore_creds
  echo ${PASS} > ${WORKDIR}/kafka/${BROKER}_truststore_creds
done

